Sat Mar 28 21:30:06 HKT 2020
	* hacking: add list_function module

Mon Mar  9 09:49:05 HKT 2020
	* analysis: output target file cmdline AND idx
	* analysis/gcc/c.cc: do NOT use get_mem_ref_tn()
	* analysis/gcc/c.cc: fix a potential NULL-deref BUG

Sun Mar  8 21:19:18 HKT 2020
	* analysis/gcc/c.cc: rewrite phase 4-6
	* analysis/gcc/c.cc: output thread ID, with CLIB_DBG_FUNC_ENTER(), it
	can show us which source file trigger an exception.

Sat Mar  7 10:55:57 HKT 2020
	* fix an imcomplete fix in get_target_field1()
	* remove a BUG_ON

Fri Mar  6 20:48:06 HKT 2020
	* get_target_field_phase4: removed
	* fix SIGSEGV in get_target_field1(): xloc could be NULL in UNION_TYPE

Thu Mar  5 18:06:49 HKT 2020
	* check_file_var(): add a new return value: VAR_IS_LOCAL
	* add testcase directory: check comments in analysis/gcc/c.cc
	* call_ssaname(): fix a hand writing error: not MODE_ADJUST but
			  MODE_GETINDCFG2
	* check_file_func(): do NOT check DECL_SAVED_TREE, do NOT use
			     FUNC_IS_NONE.

Sat Dec 14 17:57:39 CST 2019
	* fix SIGSEGV issue by loading target sibuf automatically. Use the
	latest clib.

Sat Dec 14 09:52:32 CST 2019
	* ignore GIMPLE_DEBUG and GIMPLE_NOP in get_function_detail()
	* check if the new function_decl has a function body while the old
	one doesn't, mostly happen when a function is static inline...

Thu Dec 12 19:22:16 CST 2019
	* collect ast info at IPA_ALL_PASSES_START, to ensure that the
	information we collected is correct. At that time, the original
	gimple_body has been parsed and cleared, the information is now
	traced by ->f->cfg, which may be done in build_gimple_cfg()->
	make_blocks()->make_blocks_1()->... For gimple_label, use
	cleanup_dead_labels() and group_case_labels. Then make_edges().

Sat Dec  7 16:42:03 CST 2019
	* fix si_module->loaded uninitialise issue
	* gen a subshell for collect/analysis/hacking commands
	* fix kern_copyuser.so load error issue

Sat Nov 30 20:01:53 CST 2019
	* fix gcc-8 compile warnings and errors

Sat Aug 17 11:25:16 HKT 2019
	* analysis/gcc/c.cc: fix a mishandled issue
	* add license information for source files

Fri Jul 26 10:38:25 HKT 2019
	Readjust source layout
	* analysis/analysis.c: fix pthread_join join a non exists thread

Tue Jan 15 19:59:14 HKT 2019
	Fix issues
	* another resfile may not found a symbol in current resfile, should
	take a look at in the builtin resfile
	* plugins/sinode.c: check behavior first when looking for a global
	symbol

Mon Jan 14 16:22:16 HKT 2019
	Fix issues
	* static variables may have no location(loc->file NULL).

Tue Jan  8 19:14:36 HKT 2019
	Fix issues
	* plugins/uninit.cc: gen_code_paths may take too long for one path

Thu Jan  3 14:34:50 HKT 2019
	Fix issues
	* plugins/uninit.cc: memory leak
	* pthread_create memory leak issues
	* plugins/utils.cc: gen_code_paths may take too long, ignore functions
	with more than FUNC_CP_MAX.
	* si_core.c: support argv list to execute commands automatically, to run with
	valgrind

Wed Jan  2 00:13:22 HKT 2019
	Fix issues
	* gen_code_paths may alloc too many memory, use clib_rw_pool

Fri Dec 28 10:49:10 HKT 2018
	add support for linux kernel(4.14.x)
	* collect/c.cc: collect files without any function
	* plugins/c.cc: fix BUGs when parsing linux kernel vmlinux resfile
