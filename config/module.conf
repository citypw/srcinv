# core
{
	name: collect
	path: collect.so
	comment: "collect information"
	category: core
	type: BOTH_BOTH_ANY_ANY
}
{
	name: analysis
	path: analysis.so
	comment: "analysis the collected information"
	category: core
	type: BOTH_BOTH_ANY_ANY
}
{
	name: hacking
	path: hacking.so
	comment: "do anything you want to do"
	category: core
	type: BOTH_BOTH_ANY_ANY
}
# collect
{
	name: gcc_c
	path: gcc_c.so
	comment: "make EXTRA_CFLAGS+='-fplugin=${SOPATH} -fplugin-arg-gcc_c-output=${RESFILE} -fplugin-arg-gcc_c-kernel=[0|1]' -jx ..."
	category: collect
	type: SRC_BOTH_LINUX_GCC_C
}
{
	name: gcc_asm
	path: gcc_asm.so
	comment: "make EXTRA_AFLAGS+='-fplugin=${SOPATH} -fplugin-arg-gcc_asm-output=${RESFILE} -fplugin-arg-gcc_asm-kernel=[0|1]' -jx ..."
	category: collect
	type: SRC_BOTH_LINUX_GCC_ASM
}
# analysis
{
	name: gcc_c
	path: gcc_c.so
	comment: "analysis the collected information"
	category: analysis
	type: SRC_BOTH_LINUX_GCC_C
	autoload: 1
}
{
	name: gcc_asm
	path: gcc_asm.so
	comment: "analysis the collected objfiles"
	category: analysis
	type: SRC_BOTH_LINUX_GCC_ASM
	autoload: 1
}
# hacking
{
	name: uninit
	path: uninit.so
	comment: "check uninitialized variable usage"
	category: hacking
	type: SRC_BOTH_LINUX_GCC_C
	autoload: 0
}
{
	name: kern_copyuser
	path: kern_copyuser.so
	comment: "check copy_to_user/copy_from_user argument type incorrect"
	category: hacking
	type: SRC_KERN_LINUX_GCC_C
	autoload: 1
}
{
	name: test
	path: test.so
	comment: "test"
	category: hacking
	type: SRC_BOTH_LINUX_GCC_C
	autoload: 1
}
{
	name: list_function
	path: list_function.so
	comment: "list_function"
	category: hacking
	type: SRC_BOTH_LINUX_GCC_C
	autoload: 1
}
{
	name: show_detail
	path: show_detail.so
	comment: "show detail of variables functions"
	category: hacking
	type: SRC_BOTH_LINUX_GCC_C
	autoload: 1
}
